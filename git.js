const Web3 = require('web3');
const Tx = require('ethereumjs-tx').Transaction;

//Your infura url(polygon mainnet)
const web3 = new Web3(new Web3.providers.HttpProvider('https://polygon-mainnet.infura.io/v3/XXXXXXXXXXXXXXXXXXX'));

//polygon-zapper-exchange
var trxData_exchange = {
  gasPrice: web3.utils.toHex(30 * 1e9), 
  gasLimit: web3.utils.toHex(31428),
  to: '0xDef1C0ded9bec7F1a1670819833240f027b25EfF', 
  value: '0x00', 
  data: '0x415565b0000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000000000000000002cd900000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000040000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf12700000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000024466796e000000000000000000000000000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000000000000000002cd8000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000a102072a4c07f06ec3b4900fdc4c7b80b6c57429000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf12700000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000869584cd0000000000000000000000003ce37278de6388532c3949ce4e886f365b14fb560000000000000000000000000000000000000000000000dc2afa4f2b617e498b'
}
//polygon-zapper-pool
var trxData_pool = {
  gasPrice: web3.utils.toHex(30 * 1e9), 
  gasLimit: web3.utils.toHex(24036),
  to: '0xF231be40d73a9E73d859955344A4fF74f448dF34', 
  value: '0x00', 
  data: '0x9ca37a0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006e7a5fafcec6bb1e78bae2a1f0b612012bf14827000000000000000000000000000000000000000000000000002386f26fc1000000000000000000000000000000000000000000000000000000000000d17f380e0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf127000000000000000000000000000000000000000000000000000000000000001200000000000000000000000003ce37278de6388532c3949ce4e886f365b14fb56000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048d0e30db0869584cd000000000000000000000000f4e386b070a18419b5d3af56699f8a438dd18e890000000000000000000000000000000000000000000000a7663e984a617e1be4000000000000000000000000000000000000000000000000'
}
//polygon-zapper-save
var trxData_save = {
  gasPrice: web3.utils.toHex(30 * 1e9),
  gasLimit: web3.utils.toHex(23804),
  to: '0x8DfDea6A4818d2AA7463edB9A8841cB0c04255aF', 
  value: '0x00', 
  data: '0x69a7e57b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000008df3aad3a84da6b69a4da8aec3ea40d9091b2ac4000000000000000000000000000000000000000000000000002248db6953241a0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf127000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000003ce37278de6388532c3949ce4e886f365b14fb560000000000000000000000000000000000000000000000000000000000000048d0e30db0869584cd000000000000000000000000f4e386b070a18419b5d3af56699f8a438dd18e8900000000000000000000000000000000000000000000004aec276153617e1cac000000000000000000000000000000000000000000000000'
}
//Your privacy key
var keyList=['XXXXXXXXXXXXXXXXXXXXXXXXXXXXX','XXXXXXXXXXXXXXXXXXXXXXXXXXXXX','XXXXXXXXXXXXXXXXXXXXXXXXXXXXX' ...'XXXXXXXXXXXXXXXXXXXXXXXXXXXXX'];

const readline = require('readline').createInterface({
  input: process.stdin,
  output: process.stdout
})
readline.question('which?\n[0]zapper-exchange\n[1]zapper-add pool\n[2]zapper-save\n', num => {
  console.log('You pick:'+num);
  if(num>2){
    console.log('error');
  }else{
    sendTX(num);
  }
  readline.close();
})

function sendTX(type){
  for(i=0;i<keyList.length;i++){
    Zapper(keyList[i],type);
  }
}

function Zapper(pKey,tp){
  var trxData;
  if(tp==0){
    trxData=trxData_exchange;
  }
  if(tp==1){
    trxData=trxData_pool;
  }
  if(tp==2){
    trxData=trxData_save;
  }
  web3.eth.accounts.signTransaction(trxData, pKey)
    .then(function(value){
      web3.eth.sendSignedTransaction(value.rawTransaction)
        .then(
          function(response){
          console.log("response:" + JSON.stringify(response, null, ' '));
        }
        ).catch(err => console.log('error1:', err.message))
      }).catch(err => console.log('error2:', err.message))
    }